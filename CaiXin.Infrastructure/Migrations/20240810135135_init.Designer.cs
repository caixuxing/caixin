// <auto-generated />
using System;
using CaiXin.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaiXin.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240810135135_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaiXin.Domain.Entity.SysDictData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("编码");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DateTime")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<Guid>("DictTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("字典类型Id");

                    b.Property<string>("ExtData")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("拓展数据(保存业务功能的配置项)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("Remark")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasComment("备注");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.Property<string>("TagType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("值");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsDescending();

                    b.HasIndex("DictTypeId");

                    b.ToTable("SysDictData");
                });

            modelBuilder.Entity("CaiXin.Domain.Entity.SysDictType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("名称");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("SysDictType", t =>
                        {
                            t.HasComment("系统字典分类表");
                        });
                });

            modelBuilder.Entity("CaiXin.Domain.Entity.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique()
                        .IsDescending();

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("CaiXin.Domain.Entity.SysDictData", b =>
                {
                    b.HasOne("CaiXin.Domain.Entity.SysDictType", null)
                        .WithMany("Children")
                        .HasForeignKey("DictTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CaiXin.Domain.Entity.SysDictType", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
